package pe.com.bn.app.view;

import javax.faces.bean.ManagedBean;
import javax.inject.Named;
import javax.faces.context.FacesContext;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Date;
import java.util.Enumeration;
import java.util.Locale;

@ManagedBean
@Named
public class WelcomeView {

    private String message = "¡Hola Mundo desde JSF!";

    public WelcomeView() {
        incrementGlobalVisitCount();
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    // Obtener la IP del cliente
    public String getClientIP() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        return ((HttpServletRequest) facesContext.getExternalContext().getRequest()).getRemoteAddr();
    }

    // Obtener la IP del servidor
    public String getServerIP() {
        try {
            InetAddress serverIP = InetAddress.getLocalHost();
            return serverIP.getHostAddress();
        } catch (UnknownHostException e) {
            return "IP desconocida";
        }
    }

    // Incrementar el contador global de visitas a la página
    private void incrementGlobalVisitCount() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ServletContext servletContext = (ServletContext) facesContext.getExternalContext().getContext();

        Integer globalVisitCount = (Integer) servletContext.getAttribute("globalVisitCount");
        if (globalVisitCount == null) {
            globalVisitCount = 0;
        }
        globalVisitCount++;
        servletContext.setAttribute("globalVisitCount", globalVisitCount);
    }

    // Obtener el número global de visitas a la página
    public int getGlobalVisitCount() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ServletContext servletContext = (ServletContext) facesContext.getExternalContext().getContext();
        Integer globalVisitCount = (Integer) servletContext.getAttribute("globalVisitCount");
        return globalVisitCount == null ? 0 : globalVisitCount;
    }

    // Obtener el navegador del cliente
    public String getClientBrowser() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        return ((HttpServletRequest) facesContext.getExternalContext().getRequest()).getHeader("User-Agent");
    }

    // Obtener el sistema operativo del cliente
    public String getClientOS() {
        String userAgent = getClientBrowser();
        if (userAgent.toLowerCase().contains("windows")) {
            return "Windows";
        } else if (userAgent.toLowerCase().contains("mac")) {
            return "Mac OS";
        } else if (userAgent.toLowerCase().contains("linux")) {
            return "Linux";
        } else {
            return "Sistema operativo desconocido";
        }
    }

    // Obtener la hora actual del servidor
    public Date getServerTime() {
        return new Date();
    }

    // Obtener la URL solicitada por el cliente
    public String getRequestedURL() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        HttpServletRequest request = (HttpServletRequest) facesContext.getExternalContext().getRequest();
        return request.getRequestURL().toString();
    }

    // Obtener el protocolo de la solicitud (HTTP/HTTPS)
    public String getRequestProtocol() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        HttpServletRequest request = (HttpServletRequest) facesContext.getExternalContext().getRequest();
        return request.getProtocol();
    }

    // Obtener el método HTTP de la solicitud (GET, POST, etc.)
    public String getRequestMethod() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        HttpServletRequest request = (HttpServletRequest) facesContext.getExternalContext().getRequest();
        return request.getMethod();
    }

    // Obtener el idioma preferido del cliente
    public String getClientPreferredLanguage() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        HttpServletRequest request = (HttpServletRequest) facesContext.getExternalContext().getRequest();
        return request.getLocale().getLanguage();
    }
}
